class Solution{
public int beautifulSubsets(int[] nums,int k)
    {    Arrays.sort(nums);
        return findBSets(nums , k , 0 , new HashMap<>());
    }
    public int findBSets(int [] nums,int k,int index,HashMap<Integer,Integer>freqMap)
    {
        if(index == nums.length)
        {
            if(freqMap.size()==0) return 0;
            return 1;
        }
        int pick =0;
       // int element1 =nums[index]+k;
        int element2 = nums[index]-k;
        if(freqMap.size()==0 || !freqMap.containsKey(element2))
    
    {
        freqMap.put(nums[index],freqMap.getOrDefault(nums[index],0)+1);
        pick = findBSets(nums,k,index+1,freqMap);
        freqMap.put(nums[index],freqMap.get(nums[index])-1);
        if(freqMap.get(nums[index])==0)
            freqMap.remove(nums[index]);
        
    }
    int noPick = findBSets(nums,k,index+1,freqMap);

    return pick+ noPick;

}
}
